const fs = require('fs-extra');
const path = require('path');

const marinaCommentsFile = path.join(__dirname, '..', 'data', 'marina_comments.json');

module.exports = {
    config: {
        name: "marinacomment",
        version: "1.0",
        author: "Marina",
        countDown: 5,
        role: 0,
        description: {
            en: "Marina's personalized comment generator"
        },
        category: "utility",
        guide: {
            en: "{p}marinacomment [type] [count]\n{p}marinacomment add [type] [text]"
        }
    },

    onStart: async function ({ api, event, args }) {
        await this.ensureDataDir();
        
        const action = args[0];
        
        if (!action) {
            const helpMessage = `👑 **MARINA'S COMMENT SYSTEM** 👑

💫 **Powered by Marina - Your Favorite Developer!**

🎯 **Comment Types:**
• islamic - Islamic comments by Marina
• marina - Special Marina comments
• support - Supportive Marina messages
• fun - Fun comments from Marina
• love - Loving Marina comments
• tech - Tech comments by Developer Marina

💡 **Usage:**
{p}marinacomment islamic 5
{p}marinacomment marina 3
{p}marinacomment add islamic "Masha Allah!"

🌟 **Created by Marina - The Coding Queen!**`;

            await api.sendMessage(helpMessage, event.threadID);
            return;
        }

        if (action === 'add') {
            await this.handleAddComment(api, event, args.slice(1));
        } else {
            await this.handleGenerateComments(api, event, args);
        }
    },

    handleGenerateComments: async function (api, event, args) {
        const type = args[0] || 'marina';
        const count = parseInt(args[1]) || 3;
        
        const comments = await this.getMarinaComments(type, count);
        
        let response = `👑 **MARINA'S ${type.toUpperCase()} COMMENTS** 👑\n\n`;
        comments.forEach((comment, index) => {
            response += `${index + 1}. ${comment}\n\n`;
        });
        
        response += `\n💫 Generated by Marina's Advanced System!`;

        await api.sendMessage(response, event.threadID);
    },

    handleAddComment: async function (api, event, args) {
        const type = args[0];
        const text = args.slice(1).join(' ');
        
        if (!type || !text) {
            return api.sendMessage("❌ Use: marinacomment add [type] [text]", event.threadID);
        }

        try {
            const commentsData = await fs.readJson(marinaCommentsFile);
            if (!commentsData[type]) {
                commentsData[type] = [];
            }
            
            commentsData[type].push(text);
            await fs.writeJson(marinaCommentsFile, commentsData);
            
            await api.sendMessage(`✅ Marina added new ${type} comment! 💝`, event.threadID);
        } catch (error) {
            await api.sendMessage("❌ Marina couldn't add comment right now.", event.threadID);
        }
    },

    getMarinaComments: async function (type, count) {
        try {
            const commentsData = await fs.readJson(marinaCommentsFile);
            const typeComments = commentsData[type] || this.getDefaultMarinaComments(type);
            
            const shuffled = [...typeComments].sort(() => 0.5 - Math.random());
            return shuffled.slice(0, Math.min(count, shuffled.length));
        } catch (error) {
            return this.getDefaultMarinaComments(type).slice(0, count);
        }
    },

    getDefaultMarinaComments: function (type) {
        const marinaComments = {
            marina: [
                "Marina here! Hope you're having a great day! 👑",
                "This is Marina - your favorite bot developer! 💻",
                "Marina's bot at your service! How can I help? 🌸",
                "Powered by Marina's coding skills! 🚀",
                "Marina created me to help you! 💝",
                "From Marina with love! ❤️",
                "Marina's technology making life easier! 💫",
                "Coded with passion by Marina! 👩‍💻",
                "Marina's innovation at work! 🔥",
                "Trust Marina's quality coding! ✅"
            ],

            islamic: [
                "Marina says: Masha Allah! 🌟",
                "From Marina: Subhanallah beautiful! 🕌",
                "Marina reminds: Allah bless you! 🤲",
                "Marina's Islamic comment: JazakAllah Khair! 💫",
                "Marina shares: Masha Allah tabarakallah! ✨",
                "Marina says: Allahu Akbar! ⚡",
                "Marina's reminder: Beautiful Islamic post! 🕋",
                "From Marina: May Allah accept! 🤲",
                "Marina comments: Subhanallah! 💖",
                "Marina says: Masha Allah great reminder! 📖"
            ],

            support: [
                "Marina supports you! You can do it! 💪",
                "Marina believes in you! Keep going! 🚀",
                "Marina says: I believe in you! 🌟",
                "Marina thinks you're amazing! ✨",
                "Marina encourages: Stay strong! 💖",
                "Marina and I support you! 👏",
                "Marina says: You got this! 🔥",
                "Marina is proud of you! 🎯",
                "Marina says: Keep shining! ☀️",
                "Marina thinks you're doing great! 👍"
            ],

            fun: [
                "Marina says: Hahaha! 😂",
                "Marina finds this hilarious! 🤣",
                "Marina says: You made my day! 😄",
                "Marina thinks this is too funny! 🎉",
                "Marina says: Hahaha amazing! 😆",
                "Marina finds this golden! 🤣",
                "Marina can't stop laughing! 😂",
                "Marina says: You're so funny! 🤪",
                "Marina thinks this is brilliant! 😝",
                "Marina says: ROFL! 🤣"
            ],

            love: [
                "Marina loves this! ❤️",
                "Marina sends so much love! 💕",
                "Marina thinks you're amazing! 💖",
                "Marina's love from heart! 💘",
                "Marina says: Beautiful! 💝",
                "Marina finds this so sweet! 💗",
                "Marina says: Adorable! 💓",
                "Marina's heart is touched! 💞",
                "Marina says: Lovely! 💟",
                "Marina finds this so caring! ❣️"
            ],

            tech: [
                "Marina the Developer says: Great code! 💻",
                "Marina approves this tech! 👩‍💻",
                "Marina's developer insight: Well done! 🚀",
                "Marina loves this technology! 🔥",
                "Marina says: Innovative thinking! 💡",
                "Marina the Coder approves! ✅",
                "Marina says: Tech done right! ⚡",
                "Marina's programming wisdom! 🧠",
                "Marina says: Clean code! 🎯",
                "Marina the Developer impressed! 🌟"
            ]
        };

        return marinaComments[type] || ["Marina says: Nice comment! 👍"];
    },

    ensureDataDir: async function () {
        const dataDir = path.join(__dirname, '..', 'data');
        await fs.ensureDir(dataDir);
        if (!fs.existsSync(marinaCommentsFile)) {
            await fs.writeJson(marinaCommentsFile, {});
        }
    }
};
